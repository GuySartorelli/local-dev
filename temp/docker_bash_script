#!/bin/bash

enable_xdebug=false

# set -e -- Exit immediately if a command exits with a non-zero status.
set -e

PHP_ERROR_REPORTING=${PHP_ERROR_REPORTING:-"E_ALL"}

versions="7.4 7.5 8.0 8.1 8.2 8.3 8.4"
types="apache2 cli"
# https://xdebug.org/docs/upgrade_guide
xdebug3_options="xdebug.mode ;xdebug.mode xdebug.output_dir xdebug.start_with_request xdebug.discover_client_host xdebug.client_host xdebug.client_port"
for version in $versions; do

    # Configure:
    # - Error reporting
    # - Max upload filesize
    for type in $types; do
        path="/etc/php/$version/$type/php.ini"
        if [[ -f "/etc/php/$version/$type/php.ini" ]]; then
            sed -ri 's/^display_errors\s*=\s*Off/display_errors = On/g' "$path"
            sed -ri "/^error_reporting\s*=.*$/gd" "$path"
            echo "error_reporting = $PHP_ERROR_REPORTING" >> "$path"
            echo "upload_max_filesize = 50M" >> "$path"
        fi
    done

    # Disable/enable loading xdebug extension
    # We use this method because it gives the biggest performance increase, and because
    # this will disable both apache2 and cli since their ini's are both symlinked to mods-available i.e.
    # - /etc/php/7.3/apache2/conf.d/20-xdebug.ini
    # - /etc/php/7.3/cli/conf.d/20-xdebug.ini
    # Note: Disabling xdebug improves performance by 50%
    path="/etc/php/$version/mods-available/xdebug.ini"
    if [ -f "$path" ]; then
        value=";zend_extension=xdebug.so"
        if [ "$enable_xdebug" == true ]; then
            value="zend_extension=xdebug.so"
        fi
        echo "$value" > "$path"
    fi
    # Set xdebug options in php.ini files
    for type in $types; do
        path="/etc/php/$version/$type/php.ini"
        if [ -f "$path" ]; then
			for option in $xdebug3_options; do
				value="On"
				if [[ "$option" == "xdebug.client_host" ]]; then
					value="172.17.0.1"
				fi
				if [[ "$option" == "xdebug.mode" ]]; then
					value="debug,develop"
				fi
				# Uncomment manually via dshr nano /etc/php/7.4/(apache2|cli)/php.ini
				if [[ "$option" == ";xdebug.mode" ]]; then
					value="debug,develop,profile"
				fi
				if [[ "$option" == "xdebug.output_dir" ]]; then
					value="/var/www/kcachegrind"
				fi
				if [[ "$option" == "xdebug.client_port" ]]; then
					value="9000"
				fi
				if grep -r "$option" "$path" > /dev/null; then
					sed -i "s/$option =.*/$option = $value/g" "$path"
				else
					echo "$option = $value" >> "$path"
				fi
			done
        fi
    done
done

# Mailhog - will install binaries to /home/www-data/go/bin
# bugfix[n].test:8025 for dashboard
runuser -l www-data -c 'go get github.com/mailhog/MailHog'
runuser -l www-data -c 'go get github.com/mailhog/mhsendmail'
runuser -l www-data -c 'nohup sh -c "/home/www-data/go/bin/MailHog" > /dev/null 2>&1 &'

# Apache gets grumpy about PID files pre-existing, so remove them:
rm -f /var/run/apache2/apache2.pid

# Read default envvars, which includes APACHE_RUN_USER/GROUP=www-data
source /etc/apache2/envvars

# Start apache
# It seems like -DFOREGROUND is required for the container to work correctly
exec /usr/sbin/apache2 -DFOREGROUND
