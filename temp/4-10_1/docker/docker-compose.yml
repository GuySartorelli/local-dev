# 4-10_14 example:
# webserver:  10.0.14.50
# database:   10.0.14.51 root:root
# phpmyadmin: 10.0.14.52 root:root

# ssh
# docker exec -it 4-10_14_webserver sh -c "cd /var/www && su -s /bin/bash www-data"

# mysql
# mysql -h0.0.0.0 -P3314 -DSS_mysite -uroot -proot

# if docker complains about the "version" not being supported, then install that latest version of docker-compose
# https://docs.docker.com/compose/install/

version: '3.8'

services:

  webserver:
    container_name: 4-10_14_webserver
    build:
      context: .
    volumes:
      - ../www/:/var/www
      - ../logs/apache:/var/log/apache2
    domainname: 4-10_14.test
    hostname: www
    environment:
      APACHE_LOG_DIR: "/var/log/apache2"
    ports:
      - 80:80
    networks:
      mynet:
        ipv4_address: 10.0.14.50

  mariadb:
    container_name: 4-10_14_mariadb
    image: mariadb:10.5.2
    # If changing database version after a container has already been created
    # it seems necessary to run something like `dqx` and rebuild everything.
    # image: mariadb:10.1.10
    volumes:
      - mariadb-volume:/var/lib/mysql
    environment:
      TZ: "Pacific/Auckland"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: 'SS_mysite'
    # use ports instead of IP address for database connection
    # example: 4-10_14 connect on 0.0.0.0:3314
    ports:
      - 3314:3306
    networks:
      mynet:

volumes:
  mariadb-volume:
    name: 4-10_14_mariadb-volume

networks:
  mynet:
    name: 4-10_14_mynet
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.14.0/24

# (will automatically create a 4-10_14_default network, name is based on the directory)

# If you get "cannot create network" issues - probably need to remove previously created stuff on the network:
# docker ps -a
# docker network ls
# https://stackoverflow.com/questions/45648821/docker-compose-up-error-invalid-address
# remove all containers
# docker rm -f $(docker ps -aq)
# remove all unused networks
# docker network prune -f

#ports:
  # Specify "- 80" instead of "- 80:80" to support multiple docker-composes
  # Docker compose will auto-generate a 0.0.0.0:327xx port
  # This is to solve "Bind for 0.0.0.0:80 failed: port is already allocated"
  # https://github.com/docker/compose/issues/4950#issuecomment-342882168
#  - 80